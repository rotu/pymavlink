name: test pymavlink

on: [push, pull_request]
# paths:
# - "*"
# - "!README.md" <-- don't rebuild on doc change

jobs:
  build:

    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false  # don't cancel if a job from the matrix fails
      matrix:
        python-version: ['3.6', '3.7', '3.8', '3.9', '3.10']

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}

        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-mock numpy
          pip install mypy
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          sudo apt update
          sudo apt install -y libgtest-dev g++
      - name: Install ruff
        run: pip install ruff
        if: matrix.python-version != '3.6'

      - uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Lint
        if: matrix.python-version != '3.6'
        run: |
          # stop the build if there are Python syntax errors or undefined names
          ruff . --select=E9,F63,F7,F82 --show-source
      # NOTE: we must do all testing on the installed python package, not
      # on the build tree. Otherwise the testing is invalid and may not
      # indicate the code actually works
      #
      # Set pythonpath

      # install
      - name: Install mavlink message
        run: |
          git clone https://github.com/ArduPilot/mavlink.git
          ln -s $PWD/mavlink/message_definitions ../

      - name: Install pymavlink
        run: |
          python setup.py build install

      - name: Lint generated python code
        if: matrix.python-version != '3.6'
        run: ruff --ignore='E501,E741' --show-source dialects/
      - name: Typecheck generated python code
        run: mypy --config-file ./.github/workflows/mypy-generated.ini dialects/

      - name: Generate messages
        run: |
          ./test_generate_all.sh
      - name : Test generators
        run: |
          ./test_generator.sh

      - name : Test JavaScript Bindings - generated tests and Mocha tests
        run: |
          ./test_gen_js.sh && cd generator/javascript && npm test && cd -

      - name: Test with pytest
        run: |
          python -m pytest
